{"version":3,"sources":["components/Bushes.js","components/Door.js","components/DoorLight.js","components/Floor.js","components/Roof.js","components/Walls.js","components/House.js","components/Graves.js","components/Ghosts.js","utils/GUI.js","App.js","index.js"],"names":["Bush","scale","position","ref","useRef","useEffect","current","set","castShadow","color","Bushes","Door","y","z","geometry","setAttribute","Float32BufferAttribute","attributes","uv","array","textureLoader","TextureLoader","colorTexture","load","alphaTexture","aoTexture","heightTexture","normalTexture","metalnessTexture","roughtnessTexture","args","map","transparent","alphaMap","aoMap","displacementMap","displacementScale","normalMap","metalnessMap","roughnessMap","DoorLight","shadow","mapSize","width","height","camera","far","Floor","ambientOcclusionTexture","roughnessTexture","repeat","wrapS","RepeatWrapping","wrapT","rotation","x","Math","PI","receiveShadow","Roof","Walls","House","Grave","rotationY","rotationZ","Graves","useState","graves","setGraves","randomGraves","i","angle","random","radius","sin","cos","push","length","grave","index","Ghosts","ghost1","ghost2","ghost3","clock","Clock","useFrame","elapsedTime","getElapsedTime","ghost1Angle","ghost2Angle","ghost3Angle","gui","GUI","App","ambientLightRef","moonLightRef","setTimeout","addFolder","add","moonLight","min","max","step","fov","aspect","window","innerWidth","innerHeight","near","shadows","attach","al","intensity","OrbitControls","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a0bacd1a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nconst Bush = ({scale, position}) => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current.scale.set(...scale)\n    ref.current.position.set(...position)\n  }, [scale, position])\n  return(\n    <mesh ref={ref} castShadow>\n      <sphereBufferGeometry />\n      <meshStandardMaterial color='#89c854' />\n    </mesh>\n  )\n}\n\nconst Bushes = () => {\n  return (\n    <>\n      <Bush scale={[0.5, 0.5, 0.5]} position={[0.8, 0.2, 2.2]} />\n      <Bush scale={[0.25, 0.25, 0.25]} position={[1.4, 0.1, 2.1]} />\n      <Bush scale={[0.4, 0.4, 0.4]} position={[-0.8, 0.1, 2.2]} />\n      <Bush scale={[0.15, 0.15, 0.15]} position={[-1, 0.05, 2.6]} />\n    </>\n  )\n}\n\nexport default Bushes\n","import React, { useEffect, useRef } from 'react'\nimport { TextureLoader, Float32BufferAttribute } from 'three'\n\nconst Door = () => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current.position.y = 1\n    ref.current.position.z = 2 + 0.01\n    ref.current.geometry.setAttribute('uv2', new Float32BufferAttribute(ref.current.geometry.attributes.uv.array, 2))\n  }, [])\n  const textureLoader = new TextureLoader()\n  const colorTexture = textureLoader.load('/haunted-house/textures/door/color.jpg')\n  const alphaTexture = textureLoader.load('/haunted-house/textures/door/alpha.jpg')\n  const aoTexture = textureLoader.load('/haunted-house/textures/door/ambientOcclusion.jpg')\n  const heightTexture = textureLoader.load('/haunted-house/textures/door/height.jpg')\n  const normalTexture = textureLoader.load('/haunted-house/textures/door/normal.jpg')\n  const metalnessTexture = textureLoader.load('/haunted-house/textures/door/metalness.jpg')\n  const roughtnessTexture = textureLoader.load('/haunted-house/textures/door/roughness.jpg')\n  \n  return (\n    <mesh ref={ref}>\n      <planeBufferGeometry args={[2.2, 2.2, 100, 100]} />\n      <meshStandardMaterial\n        map={colorTexture}\n        transparent={true}\n        alphaMap={alphaTexture}\n        aoMap={aoTexture}\n        displacementMap={heightTexture}\n        displacementScale={0.1}\n        normalMap={normalTexture}\n        metalnessMap={metalnessTexture}\n        roughnessMap={roughtnessTexture}\n      />\n    </mesh>\n  )\n}\n\nexport default Door\n","import React, { useEffect, useRef } from 'react'\n\nconst DoorLight = () => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current.shadow.mapSize.width = 256\n    ref.current.shadow.mapSize.height = 256\n    ref.current.shadow.camera.far = 7\n  }, [])\n\n  return (\n    <>\n      <pointLight ref={ref} args={['#ff7d46', 1, 7]} position={[0, 2.2, 2.7]} castShadow />\n    </>\n  )\n}\n\nexport default DoorLight\n","import React, { useEffect, useRef } from 'react'\nimport { Float32BufferAttribute, TextureLoader, RepeatWrapping } from 'three'\n\nconst Floor = () => {\n  const ref = useRef()\n  const textureLoader = new TextureLoader()\n\n  const colorTexture = textureLoader.load('/haunted-house/textures/grass/color.jpg')\n  const ambientOcclusionTexture = textureLoader.load('/haunted-house/textures/grass/ambientOcclusion.jpg')\n  const normalTexture = textureLoader.load('/haunted-house/textures/grass/normal.jpg')\n  const roughnessTexture = textureLoader.load('/haunted-house/textures/grass/roughness.jpg')\n  colorTexture.repeat.set(8, 8)\n  ambientOcclusionTexture.repeat.set(8, 8)\n  normalTexture.repeat.set(8, 8)\n  roughnessTexture.repeat.set(8, 8)\n\n  colorTexture.wrapS = RepeatWrapping\n  ambientOcclusionTexture.wrapS = RepeatWrapping\n  normalTexture.wrapS = RepeatWrapping\n  roughnessTexture.wrapS = RepeatWrapping\n\n  colorTexture.wrapT = RepeatWrapping\n  ambientOcclusionTexture.wrapT = RepeatWrapping\n  normalTexture.wrapT = RepeatWrapping\n  roughnessTexture.wrapT = RepeatWrapping\n\n  useEffect(() => {\n    ref.current.geometry.setAttribute('uv2', new Float32BufferAttribute(ref.current.geometry.attributes.uv.array, 2))\n    ref.current.rotation.x = -Math.PI * 0.5\n    ref.current.position.y = 0\n  }, [])\n\n  return (\n    <mesh ref={ref} receiveShadow>\n      <planeBufferGeometry args={[20, 20]} />\n      <meshStandardMaterial\n        map={colorTexture}\n        aoMap={ambientOcclusionTexture}\n        normalMap={normalTexture}\n        roughnessMap={roughnessTexture}\n      />\n    </mesh>\n  )\n}\n\nexport default Floor\n","import React, { useEffect, useRef } from 'react'\n\nconst Roof = () => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current.position.y = 2.5 + 0.5\n    ref.current.rotation.y = Math.PI * 0.25\n  }, [])\n  return (\n    <mesh ref={ref}>\n      <coneBufferGeometry args={[3.5, 1, 4]} />\n      <meshStandardMaterial color='#b35f45' />\n    </mesh>\n  )\n}\n\nexport default Roof\n","import React, { useEffect, useRef } from 'react'\nimport { Float32BufferAttribute, TextureLoader } from 'three'\n\nconst Walls = () => {\n  const ref = useRef()\n  const textureLoader = new TextureLoader()\n\n  const colorTexture = textureLoader.load('/haunted-house/textures/bricks/color.jpg')\n  const ambientOcclusionTexture = textureLoader.load('/haunted-house/textures/bricks/ambientOcclusion.jpg')\n  const normalTexture = textureLoader.load('/haunted-house/textures/bricks/normal.jpg')\n  const roughnessTexture = textureLoader.load('/haunted-house/textures/bricks/roughness.jpg')\n\n  useEffect(() => {\n    ref.current.position.y = 1.25\n    ref.current.geometry.setAttribute('uv2', new Float32BufferAttribute(ref.current.geometry.attributes.uv.array, 2))\n  }, [])\n  return (\n    <mesh ref={ref} castShadow>\n      <boxBufferGeometry args={[4, 2.5, 4]} />\n      <meshStandardMaterial\n        map={colorTexture}\n        aoMap={ambientOcclusionTexture}\n        normalMap={normalTexture}\n        roughnessMap={roughnessTexture}\n      />\n    </mesh>\n  )\n}\n\nexport default Walls\n","import React from 'react'\nimport Bushes from './Bushes'\nimport Door from './Door'\nimport DoorLight from './DoorLight'\nimport Floor from './Floor'\nimport Roof from './Roof'\nimport Walls from './Walls'\n\nconst House = () => {\n  return (\n    <group>\n      <Floor />\n      <Walls />\n      <Roof />\n      <Door />\n      <Bushes />\n      <DoorLight />\n    </group>\n  )\n}\n\nexport default House\n","import React, { useEffect, useRef, useState } from 'react'\n\nconst Grave = ({position, rotationY, rotationZ}) => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current.position.set(...position)\n    ref.current.rotation.y = rotationY\n    ref.current.rotation.z = rotationZ\n    ref.current.castShadow = true\n  }, [position, rotationY, rotationZ])\n  return(\n    <mesh ref={ref} castShadow>\n      <boxBufferGeometry args={[0.6, 0.8, 0.2]} />\n      <meshStandardMaterial color='#b2b6b1' />\n    </mesh>\n  )\n}\n\nconst Graves = () => {\n  const [graves, setGraves]= useState([])\n  useEffect(() => {\n    let randomGraves = []\n    for (let i = 0; i < 50; i++) {\n      const angle = Math.random() * Math.PI * 2\n      const radius = 3 + Math.random() * 6\n\n      const x = Math.sin(angle) * radius\n      const z = Math.cos(angle) * radius\n\n      randomGraves.push({ position: [x, 0.3, z], rotationY: (Math.random() - 0.5) * 0.4, rotationZ: (Math.random() - 0.5) * 0.4 })\n    }\n    setGraves(randomGraves)\n  }, [])\n\n  return (\n    <group castShadow receiveShadow>\n      {graves.length > 0 ? graves.map((grave, index) => (\n        <Grave position={grave.position} rotationY={grave.rotationY} rotationZ={grave.rotationZ} key={index} />\n      )) : null}\n    </group>\n  )\n}\n\nexport default Graves\n","import React, { useEffect, useRef } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { Clock } from 'three'\n\nconst Ghosts = () => {\n  const ghost1 = useRef()\n  const ghost2 = useRef()\n  const ghost3 = useRef()\n\n  useEffect(() => {\n    ghost1.current.shadow.mapSize.width = 256\n    ghost1.current.shadow.mapSize.height = 256\n    ghost1.current.shadow.camera.far = 7\n\n    ghost2.current.shadow.mapSize.width = 256\n    ghost2.current.shadow.mapSize.height = 256\n    ghost2.current.shadow.camera.far = 7\n\n    ghost3.current.shadow.mapSize.width = 256\n    ghost3.current.shadow.mapSize.height = 256\n    ghost3.current.shadow.camera.far = 7\n  }, [])\n\n  const clock = new Clock()\n\n  useFrame(() => {\n    const elapsedTime = clock.getElapsedTime()\n\n    const ghost1Angle = elapsedTime * 0.5\n    ghost1.current.position.x = Math.cos(ghost1Angle) * 4\n    ghost1.current.position.z = Math.sin(ghost1Angle) * 4\n    ghost1.current.position.y = Math.sin(elapsedTime * 3)\n\n    const ghost2Angle = elapsedTime * 0.32\n    ghost2.current.position.x = Math.cos(ghost2Angle) * 5\n    ghost2.current.position.z = Math.sin(ghost2Angle) * 5\n    ghost2.current.position.y = Math.sin(elapsedTime * 4) + Math.sin(elapsedTime * 2.5)\n\n    const ghost3Angle = elapsedTime * 0.18\n    ghost3.current.position.x = Math.cos(ghost3Angle) * (7 + Math.sin(elapsedTime * 0.32))\n    ghost3.current.position.z = Math.sin(ghost3Angle) * (7 + Math.sin(elapsedTime * 0.32))\n    ghost3.current.position.y = Math.sin(elapsedTime * 5) + Math.sin(elapsedTime * 2)\n  })\n\n  return (\n    <>\n      <pointLight ref={ghost1} args={['#ff00ff', 2, 3]} />\n      <pointLight ref={ghost2} args={['#00ffff', 2, 3]} />\n      <pointLight ref={ghost3} args={['#ffff00', 2, 3]} />\n    </>\n  )\n}\n\nexport default Ghosts\n","import { GUI } from 'three/examples/jsm/libs/dat.gui.module'\n\nexport const gui = new GUI()","import React, { useEffect, useRef } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\n\nimport House from './components/House'\nimport Graves from './components/Graves'\nimport Ghosts from './components/Ghosts'\nimport './style.css'\n\nimport { gui } from './utils/GUI'\n\nconst App = () => {\n  const ambientLightRef = useRef()\n  const moonLightRef = useRef()\n\n  useEffect(() => {\n    setTimeout(() => {\n      const ambientFolder = gui.addFolder(\"Ambient Light\")\n      ambientFolder.add(ambientLightRef.current, 'intensity', 0, 1, 0.001)\n\n      const moonLight = gui.addFolder(\"Moon Light\")\n      moonLight.add(moonLightRef.current, 'intensity').min(0).max(1).step(0.001)\n      moonLight.add(moonLightRef.current.position, 'x', -5, 5, 0.001)\n      moonLight.add(moonLightRef.current.position, 'y', -5, 5, 0.001)\n      moonLight.add(moonLightRef.current.position, 'z', -5, 5, 0.001)\n\n    }, 1000)\n\n  }, [])\n\n  return (\n    <Canvas camera={{\n      fov: 75, aspect: window.innerWidth / window.innerHeight, near: 0.1, far: 100, position: [4, 2, 5]\n    }} shadows>\n      <color attach=\"background\" args={['#262837']} />\n      <fog attach=\"fog\" args={['#262837', 1, 15]} />\n\n      <ambientLight ref={al => ambientLightRef.current = al} color=\"#b9d5ff\" intensity={0.12} />\n      <directionalLight ref={moonLightRef} color=\"#b9d5ff\" intensity={0.12} position={[4, 5, -2]} castShadow />\n\n      <OrbitControls />\n\n      <House />\n      <Graves />\n      <Ghosts />\n    </Canvas>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}